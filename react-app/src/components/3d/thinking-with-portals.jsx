/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/thinking-with-portals.gltf 
*/
//@ts-nocheck

import React, { useRef } from 'react'
import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { RigidBody, RapierRigidBody, MeshCollider, CuboidCollider } from '@react-three/rapier'

export function Cube(props) {
  const { nodes, materials } = useGLTF('./models/thinking-with-portals.gltf')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube001.geometry} material={materials.Blue} />
      <mesh geometry={nodes.Cube001_1.geometry} material={materials.White} />
      <mesh geometry={nodes.Cube001_2.geometry} material={materials.Grey} />
    </group>
  );
}

export function Panel(props) {
  const { nodes, materials } = useGLTF('./models/thinking-with-portals.gltf')
  return (
    <group {...props} dispose={null}>
      <RigidBody
        name="Panel"
        type="fixed"
        scale={[1, 0.05, 1]}
      >
        <mesh geometry={nodes.Cube005.geometry} material={materials.Top} />
        <mesh geometry={nodes.Cube005_1.geometry} material={materials.Sides} />
      </RigidBody>
    </group>
  );
}

export function PanelHole(props) {
  const { nodes, materials } = useGLTF('./models/thinking-with-portals.gltf')
  return (
    <group {...props} dispose={null}>
      <RigidBody
        name="Panel"
        type="fixed"
        scale={[1, 0.05, 1]}
      >
        <MeshCollider type="trimesh">
          <mesh geometry={nodes.Cube_1.geometry} material={materials.Top} />
          <mesh geometry={nodes.Cube_2.geometry} material={materials.Sides} />
        </MeshCollider>

      </RigidBody>
      <mesh geometry={nodes.Portal.geometry} material={materials['Material.002']} scale={[0.611, 0.72, 0.871]}  position={[0, 0.05, 0]}/>
    </group>
  );
}

export function PanelSlope(props) {
  const { nodes, materials } = useGLTF('./models/thinking-with-portals.gltf')
  return (
    <group {...props} dispose={null}>
      <group scale={[1, 0.05, 1]}>
        <mesh geometry={nodes.Shape001.geometry} material={materials.Top} />
        <mesh geometry={nodes.Shape001_1.geometry} material={materials.Sides} />
      </group>
    </group>
  );
}


useGLTF.preload('./models/thinking-with-portals.gltf');

useGLTF.preload('./models/portal-models.gltf');
